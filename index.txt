https://www.virtono.com/community/tutorial-how-to/how-to-install-apache-kafka-on-ubuntu-22-04/

Section 1: Prerequisites
Before we begin, let’s ensure that your Ubuntu 22.04 server meets the necessary requirements for installing Apache Kafka:

Ubuntu 22.04 LTS installed and updated.
Java Development Kit (JDK) installed (minimum version 8).
Sudo privileges for executing administrative commands.
Sufficient disk space and memory for optimal performance.

Section 2: Installing Java Development Kit
Apache Kafka on Ubuntu relies on Java, so we need to install the JDK. Follow these steps:

Step 1: Update the package index:

sudo apt update
Step 2: Install the default JDK:

sudo apt install default-jdk
Step 3: Verify the installation:

java -version
Section 3: Downloading and Extracting Apache Kafka
Now, let’s download and extract the Apache Kafka on Ubuntu binaries:

Step 1: Visit the Apache Kafka website (https://kafka.apache.org/downloads) and check for the latest stable release.

Step 2: Download the Kafka binaries using wget or your preferred method:

wget https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz
Step 3: Extract the downloaded archive:

tar -xzf kafka_2.13-3.4.0.tgz
Section 4: Configuring Apache Kafka
To configure Apache Kafka, we’ll make some modifications to the default settings:

cd kafka_2.13-3.4.0/
Step 2: Open the server.properties file using a text editor:

nano config/server.properties
Step 3: Adjust the settings according to your requirements, such as changing the broker ID, listeners, and log directories.


bin/zookeeper-server-start.sh config/zookeeper.properties
bin/kafka-server-start.sh config/server.properties
Section 6: Testing Apache Kafka
To ensure Apache Kafka is installed correctly, let’s perform a simple test:

Step 1: Create a new topic:

bin/kafka-topics.sh --create --topic test-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1
Step 2: Produce a test message:

bin/kafka-console-producer.sh --topic test-topic --bootstrap-server localhost:9092
Step 3: Consume the message:

bin/kafka-console-consumer.sh --topic test-topic --bootstrap-server localhost:9092 --from-beginning



// {
//     "name": "kafka-test",
//     "version": "0.0.1",
//     "description": "",
//     "author": "",
//     "private": true,
//     "license": "UNLICENSED",
//     "scripts": {
//         "build": "nest build",
//         "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
//         "start:kafka": "nest start --watch --port 4001",
//         "start:rabbitmq": "nest start --watch --port 4002",
//         "start:dev": "concurrently \"npm run start:kafka\" \"npm run start:rabbitmq\"",
//         "start:debug": "concurrently \"npm run start:kafka\" \"npm run start:rabbitmq\"",
//         "start:prod": "node dist/main",
//         "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
//         "test": "jest",
//         "test:watch": "jest --watch",
//         "test:cov": "jest --coverage",
//         "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
//         "test:e2e": "jest --config ./test/jest-e2e.json"
//     },
//     "dependencies": {
//         "@nestjs-plus/rabbitmq": "^1.4.4",
//         "@nestjs/common": "^10.0.0",
//         "@nestjs/config": "^3.0.0",
//         "@nestjs/core": "^10.2.2",
//         "@nestjs/platform-express": "^10.0.0",
//         "@nestjs/typeorm": "^10.0.0",
//         "amqp-connection-manager": "^4.1.14",
//         "amqplib": "^0.10.3",
//         "concurrently": "^8.2.1",
//         "docker": "^1.0.0",
//         "kafkajs": "^2.2.4",
//         "mongodb": "^5.8.1",
//         "mysql": "^2.18.1",
//         "mysql2": "^3.6.0",
//         "pg": "^8.11.3",
//         "reflect-metadata": "^0.1.13",
//         "rxjs": "^7.8.1",
//         "typeorm": "^0.3.17"
//     },
//     "devDependencies": {
//         "@nestjs/cli": "^10.0.0",
//         "@nestjs/schematics": "^10.0.0",
//         "@nestjs/testing": "^10.2.2",
//         "@types/express": "^4.17.17",
//         "@types/jest": "^29.5.2",
//         "@types/node": "^20.3.1",
//         "@types/supertest": "^2.0.12",
//         "@typescript-eslint/eslint-plugin": "^6.0.0",
//         "@typescript-eslint/parser": "^6.0.0",
//         "eslint": "^8.42.0",
//         "eslint-config-prettier": "^9.0.0",
//         "eslint-plugin-prettier": "^5.0.0",
//         "jest": "^29.5.0",
//         "prettier": "^3.0.0",
//         "source-map-support": "^0.5.21",
//         "supertest": "^6.3.3",
//         "ts-jest": "^29.1.0",
//         "ts-loader": "^9.4.3",
//         "ts-node": "^10.9.1",
//         "tsconfig-paths": "^4.2.0",
//         "typescript": "^5.1.3"
//     },
//     "jest": {
//         "moduleFileExtensions": [
//             "js",
//             "json",
//             "ts"
//         ],
//         "rootDir": "src",
//         "testRegex": ".*\\.spec\\.ts$",
//         "transform": {
//             "^.+\\.(t|j)s$": "ts-jest"
//         },
//         "collectCoverageFrom": [
//             "**/*.(t|j)s"
//         ],
//         "coverageDirectory": "../coverage",
//         "testEnvironment": "node"
//     }
// }